GFG Link (Length of shortest common supersequence) : https://www.geeksforgeeks.org/problems/shortest-common-supersequence0322/1

To print lenght of shortest common supersequence :

class Solution
{
    public:
    int longestCommonSubsequence(string &str1,string &str2,int m,int n){
        vector<vector<int>> dp(m+1,vector<int>(n+1,0));
        for(int i=1;i<=m;i++){
            for(int j=1;j<=n;j++){
                if(str1[i-1]==str2[j-1])
                    dp[i][j] = 1 + dp[i-1][j-1];
                else
                    dp[i][j] = max(dp[i-1][j],dp[i][j-1]);
            }
        }
        return dp[m][n];
    }
    int shortestCommonSupersequence(string X, string Y, int m, int n)
    {
        int lcs = longestCommonSubsequence(X,Y,m,n);
        return m+n-lcs;
    }
};

To print the shortest common supersequence :

class Solution {
public:
    string shortestCommonSupersequence(string str1, string str2) {
        int m = str1.length();
        int n = str2.length();
        vector<vector<int>> dp(m+1,vector<int>(n+1,0));
        for(int i=1;i<=m;i++){
            for(int j=1;j<=n;j++){
                if(str1[i-1]==str2[j-1])
                    dp[i][j] = 1 + dp[i-1][j-1];
                else
                    dp[i][j] = max(dp[i-1][j],dp[i][j-1]);
            }
        }
        int i=m,j=n;
        string ans = "";
        while(i>0 && j>0){
            if(str1[i-1]==str2[j-1]){
                ans = str1[i-1] + ans;
                i--;
                j--;
            }
            else if(dp[i-1][j]>dp[i][j-1]){
                ans = str1[i-1] + ans;
                i--;
            }
            else{
                ans = str2[j-1] + ans;
                j--;
            }
        }
        while(i>0){
            ans = str1[i-1] + ans;
            i--;
        }
        while(j>0){
            ans = str2[j-1] + ans;
            j--;
        }
        return ans;
    }
};
